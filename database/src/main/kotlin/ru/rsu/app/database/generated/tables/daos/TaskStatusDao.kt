/*
 * This file is generated by jOOQ.
 */
package ru.rsu.app.database.generated.tables.daos


import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import ru.rsu.app.database.generated.tables.TaskStatus
import ru.rsu.app.database.generated.tables.records.TaskStatusRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TaskStatusDao(configuration: Configuration?) : DAOImpl<TaskStatusRecord, ru.rsu.app.database.generated.tables.pojos.TaskStatus, Long>(TaskStatus.TASK_STATUS, ru.rsu.app.database.generated.tables.pojos.TaskStatus::class.java, configuration) {

    /**
     * Create a new TaskStatusDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: ru.rsu.app.database.generated.tables.pojos.TaskStatus): Long? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Long?, upperInclusive: Long?): List<ru.rsu.app.database.generated.tables.pojos.TaskStatus> = fetchRange(TaskStatus.TASK_STATUS.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Long): List<ru.rsu.app.database.generated.tables.pojos.TaskStatus> = fetch(TaskStatus.TASK_STATUS.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Long): ru.rsu.app.database.generated.tables.pojos.TaskStatus? = fetchOne(TaskStatus.TASK_STATUS.ID, value)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<ru.rsu.app.database.generated.tables.pojos.TaskStatus> = fetchRange(TaskStatus.TASK_STATUS.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<ru.rsu.app.database.generated.tables.pojos.TaskStatus> = fetch(TaskStatus.TASK_STATUS.NAME, *values)

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDescription(lowerInclusive: String?, upperInclusive: String?): List<ru.rsu.app.database.generated.tables.pojos.TaskStatus> = fetchRange(TaskStatus.TASK_STATUS.DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    fun fetchByDescription(vararg values: String): List<ru.rsu.app.database.generated.tables.pojos.TaskStatus> = fetch(TaskStatus.TASK_STATUS.DESCRIPTION, *values)
}
