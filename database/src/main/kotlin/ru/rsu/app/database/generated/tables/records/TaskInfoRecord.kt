/*
 * This file is generated by jOOQ.
 */
package ru.rsu.app.database.generated.tables.records


import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl

import ru.rsu.app.database.generated.tables.TaskInfo


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TaskInfoRecord() : UpdatableRecordImpl<TaskInfoRecord>(TaskInfo.TASK_INFO), Record10<Long?, String?, String?, Long?, Long?, Long?, Long?, Long?, LocalDateTime?, LocalDateTime?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var taskDescription: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var rTaskTypeId: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var rTaskStatusId: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var rUserExecutorId: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var rUserDirectorId: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var rAvailableEquipmentId: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var startTaskDate: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var finishTaskDate: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<Long?, String?, String?, Long?, Long?, Long?, Long?, Long?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row10<Long?, String?, String?, Long?, Long?, Long?, Long?, Long?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row10<Long?, String?, String?, Long?, Long?, Long?, Long?, Long?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row10<Long?, String?, String?, Long?, Long?, Long?, Long?, Long?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Long?> = TaskInfo.TASK_INFO.ID
    override fun field2(): Field<String?> = TaskInfo.TASK_INFO.NAME
    override fun field3(): Field<String?> = TaskInfo.TASK_INFO.TASK_DESCRIPTION
    override fun field4(): Field<Long?> = TaskInfo.TASK_INFO.R_TASK_TYPE_ID
    override fun field5(): Field<Long?> = TaskInfo.TASK_INFO.R_TASK_STATUS_ID
    override fun field6(): Field<Long?> = TaskInfo.TASK_INFO.R_USER_EXECUTOR_ID
    override fun field7(): Field<Long?> = TaskInfo.TASK_INFO.R_USER_DIRECTOR_ID
    override fun field8(): Field<Long?> = TaskInfo.TASK_INFO.R_AVAILABLE_EQUIPMENT_ID
    override fun field9(): Field<LocalDateTime?> = TaskInfo.TASK_INFO.START_TASK_DATE
    override fun field10(): Field<LocalDateTime?> = TaskInfo.TASK_INFO.FINISH_TASK_DATE
    override fun component1(): Long? = id
    override fun component2(): String? = name
    override fun component3(): String? = taskDescription
    override fun component4(): Long? = rTaskTypeId
    override fun component5(): Long? = rTaskStatusId
    override fun component6(): Long? = rUserExecutorId
    override fun component7(): Long? = rUserDirectorId
    override fun component8(): Long? = rAvailableEquipmentId
    override fun component9(): LocalDateTime? = startTaskDate
    override fun component10(): LocalDateTime? = finishTaskDate
    override fun value1(): Long? = id
    override fun value2(): String? = name
    override fun value3(): String? = taskDescription
    override fun value4(): Long? = rTaskTypeId
    override fun value5(): Long? = rTaskStatusId
    override fun value6(): Long? = rUserExecutorId
    override fun value7(): Long? = rUserDirectorId
    override fun value8(): Long? = rAvailableEquipmentId
    override fun value9(): LocalDateTime? = startTaskDate
    override fun value10(): LocalDateTime? = finishTaskDate

    override fun value1(value: Long?): TaskInfoRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): TaskInfoRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): TaskInfoRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Long?): TaskInfoRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Long?): TaskInfoRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Long?): TaskInfoRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Long?): TaskInfoRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Long?): TaskInfoRecord {
        set(7, value)
        return this
    }

    override fun value9(value: LocalDateTime?): TaskInfoRecord {
        set(8, value)
        return this
    }

    override fun value10(value: LocalDateTime?): TaskInfoRecord {
        set(9, value)
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: String?, value4: Long?, value5: Long?, value6: Long?, value7: Long?, value8: Long?, value9: LocalDateTime?, value10: LocalDateTime?): TaskInfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised TaskInfoRecord
     */
    constructor(id: Long? = null, name: String? = null, taskDescription: String? = null, rTaskTypeId: Long? = null, rTaskStatusId: Long? = null, rUserExecutorId: Long? = null, rUserDirectorId: Long? = null, rAvailableEquipmentId: Long? = null, startTaskDate: LocalDateTime? = null, finishTaskDate: LocalDateTime? = null): this() {
        this.id = id
        this.name = name
        this.taskDescription = taskDescription
        this.rTaskTypeId = rTaskTypeId
        this.rTaskStatusId = rTaskStatusId
        this.rUserExecutorId = rUserExecutorId
        this.rUserDirectorId = rUserDirectorId
        this.rAvailableEquipmentId = rAvailableEquipmentId
        this.startTaskDate = startTaskDate
        this.finishTaskDate = finishTaskDate
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised TaskInfoRecord
     */
    constructor(value: ru.rsu.app.database.generated.tables.pojos.TaskInfo?): this() {
        if (value != null) {
            this.id = value.id
            this.name = value.name
            this.taskDescription = value.taskDescription
            this.rTaskTypeId = value.rTaskTypeId
            this.rTaskStatusId = value.rTaskStatusId
            this.rUserExecutorId = value.rUserExecutorId
            this.rUserDirectorId = value.rUserDirectorId
            this.rAvailableEquipmentId = value.rAvailableEquipmentId
            this.startTaskDate = value.startTaskDate
            this.finishTaskDate = value.finishTaskDate
            resetChangedOnNotNull()
        }
    }
}
